name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: make deps

      - name: Run tests
        run: make test

      - name: Build binary
        run: make build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binary-artifacts
          path: build/

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-and-test, build-docker]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: binary-artifacts
          path: build/

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create release artifacts
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          echo "Release artifacts creation handled by GitHub Actions"

      - name: Build binaries for multiple platforms
        run: make build-all

      - name: Create checksums
        run: |
          cd build
          sha256sum webex-mcp-server-* > SHA256SUMS
          cd ..

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          cat > release_notes.md << EOF
          ## Webex MCP Server ${VERSION}

          ### Release Artifacts
          - Linux AMD64: \`webex-mcp-server-linux-amd64\`
          - macOS AMD64: \`webex-mcp-server-darwin-amd64\`
          - macOS ARM64: \`webex-mcp-server-darwin-arm64\`
          - Windows AMD64: \`webex-mcp-server-windows-amd64.exe\`

          ### Docker Images
          - \`ghcr.io/${{ github.repository }}:${VERSION}\`
          - \`ghcr.io/${{ github.repository }}:latest\`

          ### Installation

          #### Binary
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/${VERSION}/webex-mcp-server-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -m)
          chmod +x webex-mcp-server-*
          ./webex-mcp-server-* -http :3001
          \`\`\`

          #### Docker
          \`\`\`bash
          docker run -p 3001:3001 \\
            -e WEBEX_PUBLIC_WORKSPACE_API_KEY=your_token \\
            ghcr.io/${{ github.repository }}:${VERSION}
          \`\`\`

          ### Changes
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

          ### Checksums
          Please verify the checksums in \`SHA256SUMS\` file.
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            build/webex-mcp-server-*
            build/SHA256SUMS
            releases/webex-mcp-server-${{ steps.get_version.outputs.VERSION }}.tar.gz