
services:
  # Production MCP Server (matches mcp.json webex-mcp-docker config)
  webex-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: webex-mcp-server:latest
    container_name: webex-mcp-server
    env_file:
      - .env
    stdin_open: true
    tty: true
    command: ["-all-tools"]
    restart: unless-stopped
    
  # MCP Server in HTTP/SSE mode - All 42 tools enabled
  webex-mcp-http:
    build:
      context: .
      dockerfile: Dockerfile
    image: webex-mcp-server:latest
    container_name: webex-mcp-http
    ports:
      - "${MCP_PORT:-8084}:8084"
    env_file:
      - .env
    environment:
      - WEBEX_PUBLIC_WORKSPACE_API_KEY=${WEBEX_PUBLIC_WORKSPACE_API_KEY}
      - WEBEX_API_BASE_URL=${WEBEX_API_BASE_URL:-https://webexapis.com/v1}
    command: ["-http", ":8084", "-all-tools"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    profiles:
      - http

  # Development mode with volume mounts - All 42 tools enabled
  webex-mcp-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: webex-mcp-server:dev
    container_name: webex-mcp-dev
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/build
      - go-modules:/go/pkg/mod
    working_dir: /app
    command: ["go", "run", ".", "-env", ".env", "-all-tools"]
    stdin_open: true
    tty: true
    networks:
      - mcp-network
    profiles:
      - dev

networks:
  mcp-network:
    driver: bridge

volumes:
  go-modules: